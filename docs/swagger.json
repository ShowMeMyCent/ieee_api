{
    "swagger": "2.0",
    "info": {
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "paths": {
        "/achievements": {
            "get": {
                "description": "Retrieves all achievements from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Get All Achievement",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Achievement"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Insert a Achievements and saves them to the database.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Insert a new Achievement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nama peraih achievement",
                        "name": "nama",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pencapaian yang diraih",
                        "name": "pencapaian",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "link ke Achievementnya",
                        "name": "link",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kategori Achievement",
                        "name": "kategori",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Foto peraih Achievement",
                        "name": "foto",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Achievement"
                        }
                    }
                }
            }
        },
        "/achievements/category/{category}": {
            "get": {
                "description": "Retrieves Achievements data by its Category.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Get All Achievements By Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Achievements Category",
                        "name": "category",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/achievements/foto/{id}": {
            "get": {
                "description": "Retrieves the image of an Achievement by its ID.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Get Foto Achievement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Achievement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/achievements/{id}": {
            "get": {
                "description": "Retrieves achievement data by its ID.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Get achievement By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "achievement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            },
            "put": {
                "description": "Edits a Achievements by its ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Edit Achievements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Achievement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nama peraih achievement",
                        "name": "nama",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pencapaian yang diraih",
                        "name": "pencapaian",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "link ke Achievementnya",
                        "name": "link",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kategori Achievement",
                        "name": "kategori",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Foto peraih Achievement",
                        "name": "foto",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Achievement"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Achievements and its thumbnail from the database and storage.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Delete Achievements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Achievements ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Achievements deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/activities": {
            "get": {
                "description": "Retrieves all Activities from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Get All Activities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Activities"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Uploads a Activities along with its file and saves them to the database.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Upload an activity with File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title Activities",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tanggal Activities",
                        "name": "tanggal",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File gambar",
                        "name": "gambar",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Activities"
                        }
                    }
                }
            }
        },
        "/activities/file/{id}": {
            "get": {
                "description": "Retrieves the image of a activity by its ID.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Get Gambar Activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/activities/{id}": {
            "get": {
                "description": "Retrieves Activity data by its ID.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Get Activity By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            },
            "put": {
                "description": "Edits a Activity including the ability to replace its file.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Edit Activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title Activity",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tanggal Activity",
                        "name": "tanggal",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Gambar Activity (optional)",
                        "name": "gambar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Activities"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a Activity and its gambar from the database and storage.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Delete Activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login-admin": {
            "post": {
                "description": "Logging in to get jwt token to access admin or user api by roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login as as admin.",
                "parameters": [
                    {
                        "description": "the body to login a admin",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.KodeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/news": {
            "get": {
                "description": "Retrieves all news from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Get All News",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.News"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Insert a news and saves them to the database.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Insert a new news",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Judul news",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kategori news",
                        "name": "kategori",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Thumbnail news",
                        "name": "thumbnail",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Isi konten news",
                        "name": "isi_konten",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nama penulis news",
                        "name": "nama_penulis",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Link news",
                        "name": "link",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date news",
                        "name": "date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    }
                }
            }
        },
        "/news/category/{category}": {
            "get": {
                "description": "Retrieves news data by its Category.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Get All News By Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "News Category",
                        "name": "category",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/news/file/{id}": {
            "get": {
                "description": "Retrieves the image of a News by its ID.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Get Thumbnail News",
                "parameters": [
                    {
                        "type": "string",
                        "description": "News ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/news/{id}": {
            "get": {
                "description": "Retrieves news data by its ID.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Get News By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "News ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            },
            "put": {
                "description": "Edits a News by its ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Edit News",
                "parameters": [
                    {
                        "type": "string",
                        "description": "News ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title News",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kategori News",
                        "name": "kategori",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Thumbnail News",
                        "name": "thumbnail",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Isi Konten News",
                        "name": "isi_konten",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nama Penulis News",
                        "name": "nama_penulis",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Link News",
                        "name": "link",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date News",
                        "name": "date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a News and its thumbnail from the database and storage.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Delete News",
                "parameters": [
                    {
                        "type": "string",
                        "description": "News ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "News deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/papers": {
            "get": {
                "description": "Retrieves all papers from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Papers"
                ],
                "summary": "Get All Papers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Paper"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Uploads a paper along with its file and saves them to the database.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Papers"
                ],
                "summary": "Upload Paper with File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Judul paper",
                        "name": "judul",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Abstrak paper",
                        "name": "abstrak",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Link paper",
                        "name": "link",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File paper",
                        "name": "file_paper",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Author paper",
                        "name": "author",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tanggal terbit paper",
                        "name": "tanggal_terbit",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Paper"
                        }
                    }
                }
            }
        },
        "/papers/file/{id}": {
            "get": {
                "description": "Retrieves the file of a paper by its ID.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Papers"
                ],
                "summary": "Get Paper File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Paper ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/papers/{id}": {
            "put": {
                "description": "Edits a paper including the ability to replace its file.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Papers"
                ],
                "summary": "Edit Paper",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Paper ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Judul paper",
                        "name": "judul",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Abstrak paper",
                        "name": "abstrak",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Link paper",
                        "name": "link",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File paper (optional)",
                        "name": "file_paper",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Author paper",
                        "name": "author",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tanggal terbit paper",
                        "name": "tanggal_terbit",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Paper"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a paper and its file from the database and storage.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Papers"
                ],
                "summary": "Delete Paper",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Paper ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paper deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.KodeInput": {
            "type": "object",
            "required": [
                "kode"
            ],
            "properties": {
                "kode": {
                    "type": "string"
                }
            }
        },
        "models.Achievement": {
            "type": "object",
            "required": [
                "kategori"
            ],
            "properties": {
                "foto": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "kategori": {
                    "type": "string",
                    "enum": [
                        "International",
                        "National",
                        "Campus"
                    ]
                },
                "link": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "pencapaian": {
                    "type": "string"
                }
            }
        },
        "models.Activities": {
            "type": "object",
            "properties": {
                "gambar": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "tanggal": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.News": {
            "type": "object",
            "required": [
                "kategori",
                "nama_penulis",
                "title"
            ],
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "isi_konten": {
                    "type": "string"
                },
                "kategori": {
                    "type": "string",
                    "enum": [
                        "News",
                        "Event"
                    ]
                },
                "link": {
                    "type": "string"
                },
                "nama_penulis": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Paper": {
            "type": "object",
            "properties": {
                "abstrak": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "file_paper": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "judul": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "tanggal_terbit": {
                    "type": "string"
                }
            }
        }
    }
}